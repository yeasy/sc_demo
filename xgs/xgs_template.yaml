# This is a hello world HOT template just defining a single compute instance
heat_template_version: 2013-05-23

description: >
  HOT template that just defines a single compute instance.
  Contains just base features to verify base HOT support.

parameters:
  #Parameters for the user vm
  user_image_id_1:
    type: string
    description: ID of the image to use for the user instance
  user_image_id_2:
    type: string
    description: ID of the image to use for the user instance
  xgs_image_id:
    type: string
    description: ID of the image to use for the XGS instance
  routed_image_id:
    type: string
    description: ID of the image to use for the routed_mb instance
  user_flavor:
    type: string
    description: Flavor for the user instance to be created
    default: ex.tiny
    constraints:
      - allowed_values: [ex.tiny, ex.xgs]
        description: Value must be one of 'ex.tiny' or 'ex.xgs'
  xgs_flavor:
    type: string
    description: Flavor for the xgs instance to be created
    default: ex.xgs
    constraints:
      - allowed_values: [ex.tiny, ex.xgs]
        description: Value must be one of 'ex.tiny' or 'ex.xgs'

resources:
#Networks
  net_int1:
    type: OS::Neutron::Net
    properties:
      name: net_int1
  net_int2:
    type: OS::Neutron::Net
    properties:
      name: net_int2
  net_xgs_manage1:
    type: OS::Neutron::Net
    properties:
      name: net_xgs_manage1
  net_xgs_manage2:
    type: OS::Neutron::Net
    properties:
      name: net_xgs_manage2
  net_xgs_data1:
    type: OS::Neutron::Net
    properties:
      name: net_xgs_data1
  net_xgs_data2:
    type: OS::Neutron::Net
    properties:
      name: net_xgs_data2
#Subnets
  subnet_int1:
    type: OS::Neutron::Subnet
    properties:
      name: subnet_int1
      cidr: 192.168.1.0/24
      gateway_ip: 192.168.1.1
      network_id: { get_resource: net_int1 }
      enable_dhcp: True
  subnet_int2:
    type: OS::Neutron::Subnet
    properties:
      name: subnet_int2
      cidr: 192.168.2.0/24
      gateway_ip: 192.168.2.1
      network_id: { get_resource: net_int2 }
  subnet_xgs_manage1:
    type: OS::Neutron::Subnet
    properties:
      name: subnet_xgs_manage1
      cidr: 10.0.1.0/24
      gateway_ip: 10.0.1.1
      network_id: { get_resource: net_xgs_manage1 }
  subnet_xgs_manage2:
    type: OS::Neutron::Subnet
    properties:
      name: subnet_xgs_manage2
      cidr: 10.0.2.0/24
      gateway_ip: 10.0.2.1
      network_id: { get_resource: net_xgs_manage2 }
  subnet_xgs_data1:
    type: OS::Neutron::Subnet
    properties:
      name: subnet_xgs_data1
      cidr: 10.0.3.0/24
      gateway_ip: 10.0.3.1
      network_id: { get_resource: net_xgs_data1 }
  subnet_xgs_data2:
    type: OS::Neutron::Subnet
    properties:
      name: subnet_xgs_data2
      cidr: 10.0.4.0/24
      gateway_ip: 10.0.4.1
      network_id: { get_resource: net_xgs_data2 }
#Routers
  router:
    type: OS::Neutron::Router
    properties:
      name: router
  router_inf1:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet_int1 }
  router_inf2:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet_int2 }
#Servers
  user_vm1:
    type: OS::Nova::Server
    properties:
      name: user_vm1
      image: { get_param: user_image_id_1 }
      flavor: { get_param: user_flavor }
      networks: [{network:{get_resource: net_int1}}]
      availability_zone: az1
  user_vm2:
    type: OS::Nova::Server
    properties:
      name: user_vm2
      image: { get_param: user_image_id_2 }
      flavor: { get_param: user_flavor }
      networks: [{network: {get_resource: net_int2}}]
      availability_zone: az1
  xgs_mb:
    type: OS::Nova::Server
    properties:
      name: xgs_mb
      image: { get_param: xgs_image_id }
      flavor: { get_param: xgs_flavor }
      networks: [{network: {get_resource: net_xgs_manage1}},{network: {get_resource: net_xgs_manage2}},{network: {get_resource: net_xgs_data1}},{network: {get_resource: net_xgs_data2}}]
      availability_zone: az1
  routed_mb:
    type: OS::Nova::Server
    properties:
      name: routed_mb
      image: { get_param: routed_image_id }
      flavor: { get_param: user_flavor }
      networks: [{network: {get_resource: net_int1}},{network: {get_resource: net_int2}}]
      availability_zone: az1
  
outputs:
  instance_ip:
    description: The IP address of the deployed instance
    value: { get_attr: [user_vm1, PublicIp] }
